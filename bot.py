import os, json, time
from dotenv import load_dotenv
import vk_api
import time
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType

load_dotenv()
TOKEN = os.getenv("GROUP_TOKEN")
GROUP_ID = int(os.getenv("GROUP_ID", "0"))  # –º–æ–∂–Ω–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å, –µ—Å–ª–∏ –∑–Ω–∞–µ—Ç–µ id
YANDEX_EDA_LINK = os.getenv("YANDEX_EDA_LINK", "https://eda.yandex.ru")
VK_CONTEST_POST_URL = os.getenv("VK_CONTEST_POST_URL", "https://vk.com")

session = vk_api.VkApi(token=TOKEN, api_version='5.199')
vk = session.get_api()
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
longpoll = VkBotLongPoll(session, int(os.getenv("GROUP_ID")))
send = lambda **p: vk.messages.send(random_id=0, **p)
HANDOFF_COOLDOWN = 60  # —Å–µ–∫—É–Ω–¥

# ---------- keyboards ----------
def kb(rows, inline=False, one_time=False):
    def btn(b):
        if b.get("type") == "open_link":
            return {
                "action": {
                    "type": "open_link",
                    "link": b["link"],
                    "label": b["text"]
                }
            }
        else:
            return {
                "action": {
                    "type": "text",
                    "label": b["text"],
                    "payload": json.dumps({"cmd": b.get("payload", b["text"])}, ensure_ascii=False)
                },
                "color": b.get("color", "primary")
            }
    return json.dumps({
        "one_time": one_time,
        "inline": inline,
        "buttons": [[btn(b) for b in row] for row in rows]
    }, ensure_ascii=False)


MAIN_KB = kb([
    [ {"text":"ü•ó –ó–∞–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å –ï–¥—É", "type":"open_link", "link": os.getenv("YANDEX_EDA_LINK")},
      {"text":"üí∏ –°–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏", "payload":"deals"} ],
    [ {"text":"üéÅ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ", "payload":"contest"},
      {"text":"üç¥ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–ª—é–¥–∞—Ö", "payload":"about"} ]
])

BACK_KB = kb([
    [ {"text":"ü•ó –ó–∞–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å –ï–¥—É", "type":"open_link", "link": os.getenv("YANDEX_EDA_LINK")}]
])

MORE_KB = kb([
    [ {"text":"üî•–î–∞, —Ö–æ—á—É –∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ", "payload":"about_next"} ],
    [ {"text":"ü•ó –ó–∞–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å –ï–¥—É", "type":"open_link", "link": os.getenv("YANDEX_EDA_LINK")},
      {"text":"üí∏ –°–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏", "payload":"deals"} ],
    [ {"text":"üéÅ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ", "payload":"contest"} ]
])

FINAL_KB = kb([
    [ {"text":"ü•ó –ó–∞–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å –ï–¥—É", "type":"open_link", "link": os.getenv("YANDEX_EDA_LINK")} ],
    [ {"text":"üí∏ –°–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏", "payload":"deals"},
      {"text":"üéÅ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ", "payload":"contest"} ],
    [ {"text":"‚Ü©Ô∏è –ú–µ–Ω—é", "payload":"menu"} ]
])

# ---------- state ----------
STATE = {}  # user_id -> {"about_step": int, "welcomed": bool}
def reset(uid):
    STATE[uid] = {"about_step": 0, "welcomed": False, "last_handoff": 0.0}

# ---------- texts ----------
GREET = (
    "üëã –ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã, —á—Ç–æ —Ç—ã –∑–∞–≥–ª—è–Ω—É–ª –∫ –Ω–∞–º.\n"
    "–û—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è, —á—Ç–æ–±—ã –∑–¥–µ—Å—å —Ç–µ–±–µ –±—ã–ª–æ –≤–∫—É—Å–Ω–æ –∏ –ø—Ä–∏—è—Ç–Ω–æ.\n\n"
    "–ë–æ–ª—å—à–æ–π —Å–∞–ª–∞—Ç ‚Äî —ç—Ç–æ –±–ª—é–¥–∞ –∫–∞–∫ –º–∞–ª–µ–Ω—å–∫–∏–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è. "
    "–§—Ä–∞–Ω—Ü–∏—è, –ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞, –°–∫–∞–Ω–¥–∏–Ω–∞–≤–∏—è ‚Äî –∫–∞–∂–¥–∞—è —Å—Ç—Ä–∞–Ω–∞ –≤ –æ–¥–Ω–æ–π –ø–æ—Ä—Ü–∏–∏.\n\n"
    "–ê –µ—â–µ –ë–æ–ª—å—à–æ–π —Å–∞–ª–∞—Ç —ç—Ç–æ:\n"
    "‚≠ê –¢–æ–ø —Ä–µ—Å—Ç–æ—Ä–∞–Ω –Ø–Ω–¥–µ–∫—Å –ï–¥—ã\n"
    "‚≠ê –†–µ–π—Ç–∏–Ω–≥ 4,8 (–Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ 200+ –æ—Ç–∑—ã–≤–æ–≤).\n"
    "–ê –≤ –∫–∞–∂–¥–æ–π —É–ø–∞–∫–æ–≤–∫–µ ‚Äî –º–∞–ª–µ–Ω—å–∫–∏–π –∫—É—Å–æ—á–µ–∫ –∫—É–ª—å—Ç—É—Ä—ã: –º—É–∑—ã–∫–∞, —Ñ–∏–ª—å–º –∏–ª–∏ –∫–ª–∞—Å—Å–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç.\n\n"
    "–ß—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?"
)

DEALS = (
    "–ù–µ —Ç–æ–ª—å–∫–æ –≤–∫—É—Å–Ω–æ, –Ω–æ –∏ –≤—ã–≥–æ–¥–Ω–æ!\n"
    "–°–µ–π—á–∞—Å –Ω–∞ –Ø–Ω–¥–µ–∫—Å –ï–¥–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∫–∏–¥–∫–∞ ‚àí20% –Ω–∞ –ª—é–±–æ–π –∑–∞–∫–∞–∑ –∏–∑ ¬´–ë–æ–ª—å—à–æ–≥–æ —Å–∞–ª–∞—Ç–∞¬ª.\n\n"
    "–ü—Ä–æ–º–æ–∫–æ–¥: SALE20\n"
    "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ –µ–≥–æ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞, –∏ —É–∂–∏–Ω –∏–ª–∏ –æ–±–µ–¥ —Å—Ç–∞–Ω–µ—Ç –µ—â—ë –≤–∫—É—Å–Ω–µ–µ.\n\n"
    "–•–æ—á–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–∫–∞–∑—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?"
)

HUMAN_HANDOFF = (
    "–ú—ã –ø–æ–ª—É—á–∏–ª–∏ —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–∫–æ—Ä–æ –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏–º!"
)

CONTEST = (
    "üéÅ –£ –Ω–∞—Å –∏–¥—ë—Ç —Ä–æ–∑—ã–≥—Ä—ã—à!\n\n"
    "–ú—ã –¥–∞—Ä–∏–º 2 –±–ª—é–¥–∞ –∏ 2 –Ω–∞–ø–∏—Ç–∫–∞ –≤ –ø–æ–¥–∞—Ä–æ–∫ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π üöö\n"
    "–° —Ç–µ–±—è ‚Äî —Ç–æ–ª—å–∫–æ –ª–∞–π–∫ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π! –ò –≤–∫—É—Å–Ω—ã–π —É–∂–∏–Ω –∏–∑ –±–ª—é–¥, –≤–¥–æ—Ö–Ω–æ–≤–ª—ë–Ω–Ω—ã—Ö —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç—Ä–∞–Ω–∞–º–∏ –Ω–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç—ã, –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–≤–æ–∏–º.\n\n"
    "–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ:\n"
    "1. –ù—É–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ ¬´–ë–æ–ª—å—à–æ–π —Å–∞–ª–∞—Ç¬ª\n"
    "2. –ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫ –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ¬´—É—á–∞—Å—Ç–≤—É—é¬ª –∫ –ø–æ—Å—Ç—É —Å –∫–æ–Ω–∫—É—Ä—Å–æ–º\n"
    "3. –î–æ–∂–¥–∞—Ç—å—Å—è –∏—Ç–æ–≥–æ–≤ 10 —Å–µ–Ω—Ç—è–±—Ä—è\n\n"
    "–ò—Ç–æ–≥–∏ –æ–±—ä—è–≤–∏–º –ø—Ä—è–º–æ –∑–¥–µ—Å—å. –•–æ—á–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ—Å—Ç—É –∏ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å?"
)

ABOUT_STEPS = [
    ("üç¥ –°–∞–ª–∞—Ç—ã —É –Ω–∞—Å ‚Äî —ç—Ç–æ –Ω–µ –≥–∞—Ä–Ω–∏—Ä, –∞ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –ø—Ä–∏—ë–º –ø–∏—â–∏.\n"
     "–ö–∞–∂–¥–æ–µ –±–ª—é–¥–æ ‚Äî –±–∞–ª–∞–Ω—Å –∑–µ–ª–µ–Ω–∏, –±–µ–ª–∫–æ–≤ –∏ —É–≥–ª–µ–≤–æ–¥–æ–≤. "
     "–°—ã—Ç–Ω—ã–µ –±–æ—É–ª—ã –∏ —Å–∞–ª–∞—Ç—ã, –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä–∞–∑–Ω—ã–º–∏ —É–≥–æ–ª–∫–∞–º–∏ –º–∏—Ä–∞ ‚Äî —ç—Ç–æ –≤–∫—É—Å, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–Ω–µ—Å—ë—Ç —Ç–µ–±—è –≤ –Ω–µ–±–æ–ª—å—à–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ.\n\n"
     "–ù–µ —Ç–µ—Ä–ø–∏—Ç—Å—è —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±–ª—é–¥–∞—Ö –ø–æ–¥—Ä–æ–±–Ω–µ–µ:\n"
     "üåßÔ∏è –ë–æ—É–ª ¬´–ì—Ä–æ–∑–∞ –°–∏—Ü–∏–ª–∏–∏¬ª ‚Äî —è—Ä–∫–∏–π, –∫–∞–∫ —É–ª–∏—Ü—ã –ü–∞–ª–µ—Ä–º–æ –ø–æ—Å–ª–µ –¥–æ–∂–¥—è. "
     "–°–æ—á–Ω—ã–π, —Å –ø–∞—Å—Ç–æ–π, –∫—É—Ä–∏—Ü–µ–π, –Ω—É—Ç–æ–º, —Ç–æ–º–∞—Ç–∞–º–∏, —Ä—É–∫–æ–ª–æ–π –∏ –º–∏–Ω–∏-–º–æ—Ü–∞—Ä–µ–ª–ª–æ–π ‚Äî —Å–æ–µ–¥–∏–Ω—è–µ—Ç —Å–≤–µ–∂–µ—Å—Ç—å –æ–≤–æ—â–µ–π —Å –ø–ª–æ—Ç–Ω—ã–º —é–∂–Ω—ã–º –≤–∫—É—Å–æ–º. "
     "–≠—Ç–æ –°–∏—Ü–∏–ª–∏—è –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤: —á—É—Ç—å –¥–µ—Ä–∑–∫–∞—è, –Ω–µ–º–Ω–æ–≥–æ —Ä–µ–∑–∫–∞—è, –Ω–æ –Ω–∞—Å—Ç–æ—è—â–∞—è.\n\n"
     "ü•á –°–∞–ª–∞—Ç ¬´–¶–µ–∑–∞—Ä—å¬ª ‚Äî –∫–ª–∞—Å—Å–∏–∫–∞, –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è —Å–æ –≤–∫—É—Å–æ–º. –ú–Ω–æ–≥–æ –∫—É—Ä–∏—Ü—ã. "
     "–•—Ä—É—Å—Ç—è—â–∏–π —Ä–æ–º–∞–Ω–æ, –∫—É—Ä–∏–Ω—ã–π —Ä–æ—Å—Ç–±–∏—Ñ, —á–µ—Ä—Ä–∏, —á–∏–∞–±–∞—Ç—Ç–∞ –∏ –ø–∞—Ä–º–µ–∑–∞–Ω –ø–æ–¥ –Ω–µ–∂–Ω—ã–º —Å–æ—É—Å–æ–º ‚Äî –ø—Ä–æ—Å—Ç–æ–π, –∫–∞–∫ –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏—è, –∏ —Ç–æ—á–Ω—ã–π, –∫–∞–∫ –ª–µ–≥–µ–Ω–¥–∞.\n\n"
     "–ü—Ä–æ–¥–æ–ª–∂–∏–º?"),
    ("–û—Ç–ª–∏—á–Ω–æ, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–≤—É—Ö –ª—é–±–∏–º—á–∏–∫–∞—Ö.\n"
     "üóº–ë–æ—É–ª ¬´–°–µ–Ω-–†–µ–º–∏¬ª ‚Äî –Ω–µ–∂–Ω—ã–π –±–æ—É–ª, –∫–∞–∫ –ø–æ–ª–¥–µ–Ω—å –≤ –ü—Ä–æ–≤–∞–Ω—Å–µ. "
     "–¢—ë–ø–ª–∞—è –∫–∏–Ω–æ–∞, –∫—É—Ä–∏–Ω—ã–π —Ä–æ—Å—Ç–±–∏—Ñ, —á–µ—á–µ–≤–∏—Ü–∞, –±—Ä–æ–∫–∫–æ–ª–∏, –ø–∞—Ä–º–µ–∑–∞–Ω –∏ –¥–∏–∂–æ–Ω—Å–∫–∞—è –∑–∞–ø—Ä–∞–≤–∫–∞ ‚Äî –±–æ—É–ª, –≥–¥–µ —Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å —É—é—Ç, –ø—Ä–∏—Ä–æ–¥–∞ –∏ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è –≥–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—è.\n\n"
     "ü•¨ –°–∞–ª–∞—Ç ¬´–ë—É—ç–Ω–æ—Å –î–∏–∞—Å¬ª ‚Äî –∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–æ–µ —É—Ç—Ä–æ –≤ –∫–∞–∂–¥–æ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–µ: —à–ø–∏–Ω–∞—Ç, —è–π—Ü–æ, –∫—É—Ä–∏—Ü–∞, –≤—è–ª–µ–Ω—ã–µ —Ç–æ–º–∞—Ç—ã, —Ç—ë—Ä—Ç–∞—è –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –æ—Ä–µ—Ö–∏ –∫–µ—à—å—é –∏ –ø–∏–∫–∞–Ω—Ç–Ω–∞—è –∑–∞–ø—Ä–∞–≤–∫–∞ —á–∏–º–∏—á—É—Ä—Ä–∏. "
     "–°—ã—Ç–Ω–æ, —è—Ä–∫–æ, –ø–æ-—é–∂–Ω–æ–º—É ‚Äî —á—Ç–æ–±—ã –¥–µ–Ω—å —Ç–æ—á–Ω–æ –∑–∞–¥–∞–ª—Å—è.\n\n"
     "–ü—Ä–æ–¥–æ–ª–∂–∏–º?"),
    ("–û—Ç–ª–∏—á–Ω–æ, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–≤—É—Ö –ª—é–±–∏–º—á–∏–∫–∞—Ö.\n"
     "–ë–æ—É–ª ¬´–ü–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º –≤ –õ–∞-–ë–æ–∫–µ¬ª ‚Äî –∫–∞–∫ –ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ —è—Ä–∫–æ–º—É –∫–≤–∞—Ä—Ç–∞–ª—É: —Ñ–∞—Ä—à, —Ü–≤–µ—Ç–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞, –º–æ—Ä–∫–æ–≤—å, —Å–∞–ª–∞—Ç, —Ç–æ–º–∞—Ç—ã –∏ —á–∏–º–∏—á—É—Ä—Ä–∏. "
     "–£–ª–∏—á–Ω—ã–π –¥—É—Ö –ë—É—ç–Ω–æ—Å-–ê–π—Ä–µ—Å–∞ –≤ –¥–µ—Ä–∑–∫–æ–º, —Å–æ—á–Ω–æ–º –±–æ—É–ª–µ ‚Äî –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ª—é–±–∏—Ç –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É.\n\n"
     "–°–∞–ª–∞—Ç ¬´–°–∫–∞–Ω–¥–∏–Ω–∞–≤–∏—è¬ª ‚Äî —Å–≤–µ–∂–µ—Å—Ç—å —Å–µ–≤–µ—Ä–Ω–æ–≥–æ —Å–∞–¥–∞: —à–ø–∏–Ω–∞—Ç, –∫—Ä–∞—Å–Ω—ã–µ —è–±–ª–æ–∫–∏, –∫–æ–∑–∏–π —Å—ã—Ä, –ø–∞—Å—Ç–∞-—Ä–∞–∫—É—à–∫–∏ –∏ –≤—è–ª–µ–Ω—ã–µ —Ç–æ–º–∞—Ç—ã —Å–æ —Å–ø–µ—Ü–∏—è–º–∏. "
     "–õ—ë–≥–∫–∏–π, —Ö—Ä—É—Å—Ç—è—â–∏–π, —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π ‚Äî –∫–∞–∫ —Å–∫–∞–Ω–¥–∏–Ω–∞–≤—Å–∫–∏–π –¥–∏–∑–∞–π–Ω, —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–∫—É—Å."),
    ("–û—Ç–ª–∏—á–Ω–æ, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ–º –æ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–≤—É—Ö –ª—é–±–∏–º—á–∏–∫–∞—Ö.\n"
     "–ë–æ—É–ª ¬´7/11¬ª ‚Äî —Ç–∞–π—Å–∫–∏–π —Å—Ç—Ä–∏—Ç—Ñ—É–¥ –≤ —Ç–∞—Ä–µ–ª–∫–µ: –∫—Ä–µ–≤–µ—Ç–∫–∏, –º–∞–Ω–≥–æ, —Ñ—É–Ω—á–æ–∑–∞, —ç–¥–∞–º–∞–º–µ, –∫–µ—à—å—é, –ª–∞–π–º –∏ —Å–≤–µ–∂–∞—è –∫–∏–Ω–∑–∞. "
     "–Ø—Ä–∫–æ, —Å–æ—á–Ω–æ, –æ—Å—Ç—Ä–æ ‚Äî –±—É–¥—Ç–æ —Å–æ–±—Ä–∞–ª–∏ –ø—Ä—è–º–æ –Ω–∞ —Ä—ã–Ω–∫–µ –≤ –ë–∞–Ω–≥–∫–æ–∫–µ.\n\n"
     "–°–∞–ª–∞—Ç ¬´Malina de –ü—Ä–æ–≤–∞–Ω—Å¬ª ‚Äî —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è –Ω–µ–∂–Ω–æ—Å—Ç—å: —Ä—É–∫–∫–æ–ª–∞, —à–ø–∏–Ω–∞—Ç, –∫–æ–∑–∏–π —Å—ã—Ä, —è–ª—Ç–∏–Ω—Å–∫–∏–π –ª—É–∫, –º–∞–ª–∏–Ω–æ–≤–∞—è –∑–∞–ø—Ä–∞–≤–∫–∞ –∏ –ª–µ–ø–µ—Å—Ç–∫–∏ –º–∏–Ω–¥–∞–ª—è. "
     "–°–∞–ª–∞—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç –≤–∫—É—Å –≤–º–µ—Å—Ç–æ —Å—É–µ—Ç—ã.\n\n"
     "–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è? –í—ã–±–µ—Ä–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –±–ª—é–¥–∞ –ø–æ–¥ —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤ –Ø–Ω–¥–µ–∫—Å –ï–¥–µ?\n\n"
     "–ü–æ –ø—Ä–æ–º–æ–∫–æ–¥—É SALE20 —Ç—ã –ø–æ–ª—É—á–∏—à—å —Å–∫–∏–¥–∫—É 20% –Ω–∞ –ª—é–±–æ–π –∑–∞–∫–∞–∑!")
]

# ---------- handlers ----------
def show_menu(user_id):
    if user_id not in STATE:
        reset(user_id)
    STATE[user_id]["welcomed"] = True
    send(user_id=user_id, message=GREET, keyboard=MAIN_KB)

def handle_order(user_id):
    send(user_id=user_id, message=f"ü•ó –ó–∞–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å –ï–¥—É:\n{YANDEX_EDA_LINK}", keyboard=BACK_KB)

def handle_deals(user_id):
    send(user_id=user_id, message=DEALS, keyboard=kb([
        [ {"text":"ü•ó –ó–∞–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å –ï–¥—É", "type":"open_link", "link": os.getenv("YANDEX_EDA_LINK")} ],
        [ {"text":"üéÅ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ", "payload":"contest"},
          {"text":"üç¥ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–ª—é–¥–∞—Ö", "payload":"about"} ]
    ]))

def handle_contest(user_id):
    send(user_id=user_id, message=f"{CONTEST}\n\n–°—Å—ã–ª–∫–∞: {VK_CONTEST_POST_URL}", keyboard=kb([
        [ {"text":"üéÅ –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ—Å—Ç—É", "payload":"contest_go"} ],
        [ {"text":"ü•ó –ó–∞–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å –ï–¥—É", "type":"open_link", "link": os.getenv("YANDEX_EDA_LINK")},
          {"text":"üí∏ –°–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏", "payload":"deals"} ]
    ]))

def is_known_command(text: str) -> bool:
    if not text:
        return False
    low = text.strip().lower()
    known = {
        "menu","–º–µ–Ω—é","/start","start","–Ω–∞—á–∞—Ç—å","–ø—Ä–∏–≤–µ—Ç",
        "order","–ø–µ—Ä–µ–π—Ç–∏ –≤ —è–Ω–¥–µ–∫—Å –µ–¥—É","ü•ó –∑–∞–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ —è–Ω–¥–µ–∫—Å –µ–¥—É","ü•ó –ø–µ—Ä–µ–π—Ç–∏ –≤ —è–Ω–¥–µ–∫—Å –µ–¥—É",
        "deals","—Å–∫–∏–¥–∫–∏","–∞–∫—Ü–∏–∏","üí∏ —Å–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏","üí∏ —Å–∫–∏–¥–∫–∏",
        "contest","üéÅ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ","contest_go","–ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ—Å—Ç—É","üéÅ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ—Å—Ç—É",
        "about","üç¥ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–ª—é–¥–∞—Ö","about_next","–¥–∞, —Ö–æ—á—É –∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ"
    }
    return low in known

def handle_about(user_id, next_step=False):
    STATE.setdefault(user_id, {"about_step": 0})
    if next_step:
        STATE[user_id]["about_step"] = min(STATE[user_id]["about_step"] + 1, len(ABOUT_STEPS)-1)
    step = STATE[user_id]["about_step"]
    text = ABOUT_STEPS[step]
    kb_use = MORE_KB if step < len(ABOUT_STEPS)-1 else FINAL_KB
    send(user_id=user_id, message=text, keyboard=kb_use)

def route_text(user_id, text_or_payload):
    t = (text_or_payload or "").strip()
    # –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏—Å—ã–ª–∞—é—Ç label, –ø–æ—ç—Ç–æ–º—É —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ payload (cmd)
    low = t.lower()

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if low in ("menu","‚Ü©Ô∏è –º–µ–Ω—é","–Ω–∞—á–∞—Ç—å","/start","start","–ø—Ä–∏–≤–µ—Ç"):
        show_menu(user_id); return

    # –ü–µ—Ä–µ—Ö–æ–¥—ã
    if low in ("order","ü•ó –∑–∞–∫–∞–∑–∞—Ç—å —á–µ—Ä–µ–∑ —è–Ω–¥–µ–∫—Å –µ–¥—É","ü•ó –ø–µ—Ä–µ–π—Ç–∏ –≤ —è–Ω–¥–µ–∫—Å –µ–¥—É","–ø–µ—Ä–µ–π—Ç–∏ –≤ —è–Ω–¥–µ–∫—Å –µ–¥—É"):
        handle_order(user_id); return
    if low in ("deals","üí∏ —Å–∫–∏–¥–∫–∏ –∏ –∞–∫—Ü–∏–∏","—Å–∫–∏–¥–∫–∏","–∞–∫—Ü–∏–∏"):
        handle_deals(user_id); return
    if low in ("contest","üéÅ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ"):
        handle_contest(user_id); return
    if low in ("contest_go","üéÅ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ—Å—Ç—É","–ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ—Å—Ç—É"):
        send(user_id=user_id, message=f"–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç: {VK_CONTEST_POST_URL}", keyboard=BACK_KB); return
    if low in ("about","üç¥ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–ª—é–¥–∞—Ö"):
        STATE[user_id] = {"about_step": 0}; handle_about(user_id, next_step=False); return
    if low in ("about_next","–¥–∞, —Ö–æ—á—É –∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ"):
        handle_about(user_id, next_step=True); return

    # –§–æ–ª–±—ç–∫ ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é
    show_menu(user_id)

# ---------- main loop ----------
if __name__ == "__main__":
    print("VK bot is running‚Ä¶")
    while True:
        try:
            for event in longpoll.listen():

                # 1) –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if event.type == VkBotEventType.MESSAGE_NEW and event.from_user:
                    message = event.obj.message
                    user_id = message["from_id"]
                    payload_raw = message.get("payload")
                    text = (message.get("text") or "").strip()

                    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
                    if user_id not in STATE:
                        reset(user_id)

                    # 1.1 —Å–∏—Å—Ç–µ–º–Ω–∞—è –∫–Ω–æ–ø–∫–∞ ¬´–ù–∞—á–∞—Ç—å¬ª (payload {"command":"start"})
                    if payload_raw:
                        try:
                            data = json.loads(payload_raw)
                            if data.get("command") == "start":
                                show_menu(user_id)
                                continue
                            cmd = data.get("cmd")
                            if cmd:
                                route_text(user_id, cmd)
                                continue
                        except Exception:
                            pass

                    # 1.2 –ü–µ—Ä–≤–æ–µ –∫–∞—Å–∞–Ω–∏–µ: –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ -> –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Å—Ç–æ–ø
                    if not STATE[user_id]["welcomed"]:
                        show_menu(user_id)
                        continue

                    # 1.3 –£–∂–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª–∏: –µ—Å–ª–∏ —ç—Ç–æ –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ ‚Äî –æ–±—ã—á–Ω—ã–π —Ä–æ—É—Ç–∏–Ω–≥
                    if is_known_command(text):
                        route_text(user_id, text)
                        continue

                    # 1.4 –ò–Ω–∞—á–µ ‚Äî ¬´—Å–≤–æ–±–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç¬ª –≤–Ω–µ —Å—Ü–µ–Ω–∞—Ä–∏—è: –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç —Å –∫—É–ª–¥–∞—É–Ω–æ–º
                    now = time.time()
                    last = STATE[user_id].get("last_handoff", 0)
                    if now - last >= HANDOFF_COOLDOWN:
                        send(user_id=user_id, message=HUMAN_HANDOFF)
                        STATE[user_id]["last_handoff"] = now

                # 2) –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (message_allow) => –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                if event.type == VkBotEventType.MESSAGE_ALLOW:
                    uid = event.obj["user_id"]
                    show_menu(uid)
                    continue

                # 3) –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ (group_join) => –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                if event.type == VkBotEventType.GROUP_JOIN:
                    uid = event.obj["user_id"]
                    show_menu(uid)
                    continue

        except Exception as e:
            print("Error:", e)
            time.sleep(2)

